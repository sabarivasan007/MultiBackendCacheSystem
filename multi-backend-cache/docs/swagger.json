{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/cache": {
            "post": {
                "description": "Set a value in the cache with a specified key and TTL (Time-To-Live)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Set value in cache",
                "operationId": "set-cache-value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache Type",
                        "name": "system",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Cache Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cache.CacheData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/cache/clear": {
            "put": {
                "description": "clear caches for the provided cache type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Clear all caches",
                "operationId": "clear-cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache Type",
                        "name": "system",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/cache/{key}": {
            "get": {
                "description": "Retrieve a value from the cache using the provided key and cache type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get value from cache by key",
                "operationId": "get-cache-by-key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cache Type",
                        "name": "system",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: ok"
                    },
                    "400": {
                        "description": "Bas Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete a value from the cache using the provided key and cache type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete value from cache by key",
                "operationId": "delete-cache-by-key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cache Type",
                        "name": "system",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status: ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "cache.CacheData": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "1"
                },
                "ttl": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "example": 100
                },
                "value": {}
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond"
            ]
        }
    }
}